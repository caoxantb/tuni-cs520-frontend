<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="24" failures="0" errors="0" time="1.205">
    <testsuite name="components/__tests__/ListPlayer.test.jsx" timestamp="2024-02-14T23:49:12.085Z" hostname="Caos-MBP" tests="4" failures="0" errors="0" skipped="0" time="0.148">
        <testcase classname="components/__tests__/ListPlayer.test.jsx" name="ListPlayer &gt; renders a list item with the player&apos;s id as its id" time="0.06">
        </testcase>
        <testcase classname="components/__tests__/ListPlayer.test.jsx" name="ListPlayer &gt; displays the player name inside the anchor element" time="0.038">
        </testcase>
        <testcase classname="components/__tests__/ListPlayer.test.jsx" name="ListPlayer &gt; calls the onClick prop with the player id when the link is clicked" time="0.029">
        </testcase>
        <testcase classname="components/__tests__/ListPlayer.test.jsx" name="ListPlayer &gt; Accessibility: anchor should be focusable via the keyboard (by pressing the tab key)" time="0.02">
        </testcase>
    </testsuite>
    <testsuite name="components/__tests__/ListPlayers.test.jsx" timestamp="2024-02-14T23:49:12.086Z" hostname="Caos-MBP" tests="2" failures="0" errors="0" skipped="0" time="0.09">
        <testcase classname="components/__tests__/ListPlayers.test.jsx" name="ListPlayers &gt; renders a list with id &quot;players-list&quot;" time="0.015">
        </testcase>
        <testcase classname="components/__tests__/ListPlayers.test.jsx" name="ListPlayers &gt; renders a ListPlayer for each player in the players prop" time="0.074">
        </testcase>
    </testsuite>
    <testsuite name="components/__tests__/RequestStatus.test.jsx" timestamp="2024-02-14T23:49:12.087Z" hostname="Caos-MBP" tests="2" failures="0" errors="0" skipped="0" time="0.018">
        <testcase classname="components/__tests__/RequestStatus.test.jsx" name="RequestStatus component &gt; should render the component, inside which is an element with id &apos;request-status&apos;" time="0.014">
        </testcase>
        <testcase classname="components/__tests__/RequestStatus.test.jsx" name="RequestStatus component &gt; should render the component with the correct status" time="0.002">
        </testcase>
    </testsuite>
    <testsuite name="components/__tests__/SelectedPlayer.test.jsx" timestamp="2024-02-14T23:49:12.087Z" hostname="Caos-MBP" tests="3" failures="0" errors="0" skipped="0" time="0.026">
        <testcase classname="components/__tests__/SelectedPlayer.test.jsx" name="SelectedPlayer component &gt; should render active player data correctly" time="0.018">
        </testcase>
        <testcase classname="components/__tests__/SelectedPlayer.test.jsx" name="SelectedPlayer component &gt; should render inactive player data correctly" time="0.004">
        </testcase>
        <testcase classname="components/__tests__/SelectedPlayer.test.jsx" name="SelectedPlayer component &gt; should not render if selected player is null" time="0.001">
        </testcase>
    </testsuite>
    <testsuite name="redux/actionCreators/__tests__/ActionCreators.test.js" timestamp="2024-02-14T23:49:12.087Z" hostname="Caos-MBP" tests="4" failures="0" errors="0" skipped="0" time="0.004">
        <testcase classname="redux/actionCreators/__tests__/ActionCreators.test.js" name="Testing action creators &gt; setStatus: &gt; returns an action with type SET_REQUEST_STATUS to the frontends reducers along with the payload (String) that is given as a param" time="0.001">
        </testcase>
        <testcase classname="redux/actionCreators/__tests__/ActionCreators.test.js" name="Testing action creators &gt; setSelectedPlayer: &gt; returns an action with type SET_SELECTED_PLAYER to the frontends reducers along with the payload (Object) that is given as a param" time="0.001">
        </testcase>
        <testcase classname="redux/actionCreators/__tests__/ActionCreators.test.js" name="Testing action creators &gt; clearSelectedPlayer: &gt; returns an action with type CLEAR_SELECTED_PLAYER to the frontends reducers" time="0">
        </testcase>
        <testcase classname="redux/actionCreators/__tests__/ActionCreators.test.js" name="Testing action creators &gt; setPlayers: &gt; returns an action with type SET_PLAYERS to the frontends reducers" time="0">
        </testcase>
    </testsuite>
    <testsuite name="redux/reducers/__tests__/Reducers.test.js" timestamp="2024-02-14T23:49:12.088Z" hostname="Caos-MBP" tests="9" failures="0" errors="0" skipped="0" time="0.004">
        <testcase classname="redux/reducers/__tests__/Reducers.test.js" name="playersReducer &gt; should return the initial state when no matching type in switch-case" time="0.001">
        </testcase>
        <testcase classname="redux/reducers/__tests__/Reducers.test.js" name="playersReducer &gt; should handle SET_PLAYERS by returning its payload" time="0">
        </testcase>
        <testcase classname="redux/reducers/__tests__/Reducers.test.js" name="statusReducer &gt; should return the initial state when no matching type in switch-case" time="0.001">
        </testcase>
        <testcase classname="redux/reducers/__tests__/Reducers.test.js" name="statusReducer &gt; Payload loading: should handle SET_STATUS by returning REQ_STATUS[loading]" time="0">
        </testcase>
        <testcase classname="redux/reducers/__tests__/Reducers.test.js" name="statusReducer &gt; Payload success: should handle SET_STATUS by returning REQ_STATUS[success]" time="0">
        </testcase>
        <testcase classname="redux/reducers/__tests__/Reducers.test.js" name="statusReducer &gt; Payload error: should handle SET_STATUS by returning REQ_STATUS[error]" time="0">
        </testcase>
        <testcase classname="redux/reducers/__tests__/Reducers.test.js" name="selectedPlayerReducer &gt; should return the initial state when no matching type in switch-case" time="0">
        </testcase>
        <testcase classname="redux/reducers/__tests__/Reducers.test.js" name="selectedPlayerReducer &gt; should handle SET_SELECTED_PLAYER by returning payload" time="0">
        </testcase>
        <testcase classname="redux/reducers/__tests__/Reducers.test.js" name="selectedPlayerReducer &gt; should handle CLEAR_SELECTED_PLAYER by returning payload" time="0.001">
        </testcase>
    </testsuite>
</testsuites>
